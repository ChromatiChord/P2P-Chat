{"version":3,"sources":["../node_modules/react-peer/node_modules/peerjs/dist sync","Components/MessageBox.jsx","Components/Messages.jsx","Components/FirstRenderCheck.jsx","Components/Login.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","MessageBox","props","isOrigin","today","Date","time","getHours","getMinutes","Box","sx","margin","fontFamily","float","style","color","fontSize","marginLeft","borderRadius","width","bgcolor","overflowWrap","padding","paddingLeft","Messages","join","ownID","sha224","peerID","useState","messageList","setMessageList","message","setMessage","usePeerState","brokerId","setSendState","useReceivePeerState","receiveState","firstRender","useRef","useEffect","current","useFirstRender","concat","display","justifyContent","border","height","alignItems","Typography","TextField","label","onChange","target","value","Button","variant","onClick","new_message","sendMessage","overflowY","flexDirection","map","messageItem","getFullYear","getMonth","getDate","getSeconds","getDateTime","Login","navigate","useNavigate","helperText","marginTop","App","setownID","partnerID","setPartnerID","isLogged","setIsLogged","exact","path","element","replace","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f805a1a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 79;","import { Box, Typography } from \"@mui/material\"\r\n\r\nfunction MessageBox(props) {\r\n  const isOrigin = props[\"id\"] === props[\"messageItem\"][\"senderID\"];\r\n  let today = new Date();\r\n  let time = `${today.getHours()}:${today.getMinutes()}`\r\n\r\n  return (\r\n    <Box sx={{\r\n      margin: \"10px\",\r\n      fontFamily: \"Roboto\",\r\n      float: isOrigin ? \"\" : \"right\"\r\n    }}>\r\n      <div \r\n      style={{\r\n        color: \"grey\",\r\n        fontSize: \"10px\",\r\n        marginLeft: \"12px\"\r\n      }}\r\n      >\r\n        {props[\"messageItem\"][\"senderID\"]}  {time}\r\n      </div>\r\n      <Box sx={{\r\n        borderRadius: \"20px\",\r\n        width: \"25vw\",\r\n        bgcolor: isOrigin ? \"#3283a8\" : \"#6794a8\",\r\n        color: \"white\",\r\n        overflowWrap: \"anywhere\",\r\n        padding: \"10px\",\r\n        paddingLeft: \"15px\"\r\n      }}>\r\n        {props[\"messageItem\"][\"message\"]}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MessageBox\r\n","import { TextField, Button, Box, Typography, Grid } from '@mui/material'\r\nimport { usePeerState, useReceivePeerState } from 'react-peer';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { sha224 } from 'js-sha256';\r\nimport { useFirstRender } from './FirstRenderCheck';\r\nimport MessageBox from './MessageBox';\r\n\r\nfunction getDateTime() {\r\n  let today = new Date(),\r\n  date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate(),\r\n  time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n  return date+' '+time;\r\n}\r\n\r\nfunction Messages(props) {\r\n\r\n  const font = {fontFamily: \"Roboto\"}\r\n  const id = [...props[\"ownID\"]].join(\"\");\r\n\r\n  const ownID = sha224(props[\"ownID\"]+props[\"partnerID\"]);\r\n  const peerID = sha224(props[\"partnerID\"]+props[\"ownID\"]);\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const [message, setMessage] = useState(\"____\");\r\n  function updateMessage(e) {\r\n    setMessage(e.target.value);\r\n  }\r\n  const [sendState, setSendState, brokerID, connections, ownError] = usePeerState({\r\n    \"senderID\": \"setup\",\r\n    \"message\": \"\"\r\n  }, {brokerId: ownID});\r\n  \r\n  function sendMessage() {\r\n    if (message !== \"____\") {\r\n      const new_message = {\r\n        \"senderID\": props[\"ownID\"],\r\n        \"message\": message\r\n      }\r\n      setSendState(new_message);\r\n      setMessageList(messageList.concat([new_message]));\r\n    }\r\n  }\r\n\r\n  const [receiveState, isConnected, peerError] = useReceivePeerState(peerID);\r\n  const firstRender = useFirstRender();\r\n\r\n  useEffect(() => {\r\n    if (!firstRender) {\r\n      if (receiveState[\"senderID\"] !== \"setup\") {\r\n        setMessageList(messageList.concat([{\r\n          \"senderID\": receiveState[\"senderID\"],\r\n          \"message\": receiveState[\"message\"]\r\n        }]));\r\n      }\r\n    }\r\n  }, [receiveState])\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex',\r\n      margin: \"50px\",\r\n      justifyContent: 'space-evenly'\r\n    }}>\r\n      <Box sx={{\r\n        border: \"1px solid grey\",\r\n        width: \"20vw\",\r\n        height: \"75vh\",\r\n        borderRadius: \"15px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}>\r\n        <center>\r\n          <Typography\r\n            sx={font}\r\n            >Connected To: <br/>\r\n            {props[\"partnerID\"]}\r\n          </Typography>\r\n          <TextField\r\n            id=\"outlined-helperText\"\r\n            label=\"Message\"\r\n            onChange={updateMessage}\r\n          />\r\n          <br/><br/>\r\n          <Button variant=\"outlined\" onClick={() => sendMessage()}>Send Message</Button>\r\n        </center>\r\n      </Box>  \r\n      <Box sx={{\r\n        border: \"1px solid grey\",\r\n        width: \"50vw\",\r\n        height: \"75vh\",\r\n        borderRadius: \"15px\",\r\n        overflowY: \"auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        flexDirection: \"column\",\r\n      }}>\r\n        {messageList.map(messageItem => \r\n          <div key={getDateTime() + messageItem[\"message\"]}>\r\n            <MessageBox {...{messageItem, id}}/>\r\n          </div>\r\n        )}\r\n      </Box>        \r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Messages;","import { useRef, useEffect } from 'react';\r\n\r\n// used to confirm that the current render isn't the first render\r\nexport function useFirstRender() {\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    firstRender.current = false;\r\n  }, []);\r\n\r\n  return firstRender.current;\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport { TextField, Button, Typography, Box } from '@mui/material';\r\n\r\nfunction Login(props) {\r\n  function updateOwnID(e) {\r\n    props[\"setownID\"](e.target.value);\r\n  }\r\n  function updatePartnerID(e) {\r\n    props[\"setPartnerID\"](e.target.value);\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n  function establishConnection() {\r\n    if (props[\"ownID\"] !== \"____\" && props[\"partnerID\"] !== \"____\") {\r\n      props[\"setIsLogged\"](true);\r\n      navigate(\"/P2PChat/message\");\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <center>\r\n      <Typography \r\n      variant=\"h2\"\r\n      sx={{\r\n        fontFamily: \"Roboto\",\r\n        margin: \"14px\"\r\n      }}\r\n      >Peer 2 Peer Chat</Typography> \r\n      <Typography\r\n      sx={{\r\n        fontFamily: \"Roboto\"\r\n      }}\r\n      >A simple peer to peer chat app. {<br/>} \r\n      Both you and your peer can choose any name you wish, share those names {<br/>} \r\n      with each other, and connect over a secure two way connection to chat!</Typography>\r\n      <TextField\r\n          id=\"outlined-helperText\"\r\n          label=\"Your Username\"\r\n          helperText=\"(Share this with your peer)\"\r\n          onChange={updateOwnID}\r\n          sx={{marginTop: \"20px\"}}\r\n        />\r\n      <br/>\r\n      <TextField\r\n          id=\"outlined-helperText\"\r\n          label=\"Peer Username\"\r\n          helperText=\"(Username you wish to connect to)\"\r\n          onChange={updatePartnerID}\r\n          sx={{margin: \"14px\"}}\r\n        />\r\n      <br/>\r\n      <Button variant=\"outlined\" onClick={() => establishConnection()}>Establish Connection</Button>\r\n    </center>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport { TextField, Button } from '@mui/material'\nimport { usePeerState, useReceivePeerState } from 'react-peer';\nimport { useState, useEffect, useCallback} from 'react'  \nimport Messages from './Components/Messages';\nimport Login from './Components/Login';\n\nconst App = () => {\n  const [ownID, setownID] = useState(\"____\");\n  const [partnerID, setPartnerID] = useState(\"____\");\n  const [isLogged, setIsLogged] = useState(false);\n\n  return (\n    <Router>      \n        <Routes>\n          <Route exact path=\"/P2PChat\" element={<Login {...{ownID, setownID, partnerID, setPartnerID, setIsLogged}}/>}/>\n          <Route path=\"/P2PChat/message\" element={!isLogged ? <Navigate replace to={\"/P2PChat\"}/> : <Messages {...{ownID, partnerID}}/>}/>\n          <Route path=\"*\" element={<Navigate replace to={!isLogged ? \"/P2PChat\" : \"/P2PChat/message\"}/>}/>\n        </Routes>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}